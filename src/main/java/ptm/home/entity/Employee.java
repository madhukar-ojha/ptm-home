package ptm.home.entity;
// Generated Jun 7, 2020 7:43:22 AM by Hibernate Tools 5.2.12.Final

import ptm.home.common.constant.Gender;
import ptm.home.converter.hibernate.GenderAttributeConverter;
import ptm.home.converter.hibernate.LoggedUserGenerator;
import org.hibernate.annotations.*;

import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", catalog = "ptm_dev")
public class Employee implements java.io.Serializable {

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private int id;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "designation_id", nullable = false)
	private Designation designation;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdBy", nullable = false, updatable = false)
	@GeneratorType(type = LoggedUserGenerator.class, when = GenerationTime.INSERT)
	private Employee createdBy;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedBy", insertable = false)
	@GeneratorType(type = LoggedUserGenerator.class, when = GenerationTime.ALWAYS)
	private Employee updatedBy;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "india_state_id", nullable = false)
	private IndiaState indiaState;

	@Column(name = "firstName", nullable = false, length = 50)
	private String firstName;

	@Column(name = "middleName", length = 50)
	private String middleName;

	@Column(name = "lastName", nullable = false, length = 50)
	private String lastName;

	@Column(name = "nickName", length = 50)
	private String nickName;

	@Generated(GenerationTime.ALWAYS)
	@Formula("CONCAT(firstName, ' ', lastName)")
	@Column(name = "displayName", length = 50, insertable = false, updatable = false)
	private String displayName;

	@Generated(GenerationTime.ALWAYS)
	@Formula("CONCAT(firstName, ' ', middleName, ' ', lastName)")
	@Column(name = "fullName", length = 50, insertable = false, updatable = false)
	private String fullName;

	@Column(name = "gender", nullable = false, length = 6)
	@Convert(converter = GenderAttributeConverter.class)
	private Gender gender;

	@Column(name = "password", length = 50, updatable = false)
//	@ColumnTransformer(read = "AES_DECRYPT('AES', '00', password)", write = "AES_ENCRYPT('AES', '00',?)")
//	@ColumnTransformer(write = "AES_ENCRYPT('AES', '00',?)")
	private String password;

	@Column(name = "dateOfBirth", nullable = false, length = 10)
	private LocalDate dateOfBirth;

	@Column(name = "fatherName", nullable = false, length = 50)
	private String fatherName;

	@Column(name = "motherName", nullable = false, length = 50)
	private String motherName;

	@Column(name = "phone", length = 50)
	private String phone;

	@Column(name = "mobile", nullable = false, length = 50)
	private String mobile;

	@Column(name = "email", nullable = false, length = 50)
	private String email;

	@Column(name = "address", nullable = false, length = 100)
	private String address;

	@Column(name = "pincode", nullable = false)
	private int pincode;

	@Column(name = "enabled", nullable = false, length = 50)
	private boolean enabled;

	@Column(name = "disabledReason", length = 50)
	private String disabledReason;

	@Column(name = "createdOn", updatable = false)
	@CreationTimestamp
	private LocalDateTime createdOn;

	@Column(name = "updatedOn", insertable = false)
	@UpdateTimestamp
	private LocalDateTime updatedOn;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<Role> rolesForUpdatedBy = new HashSet<Role>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<Designation> designationsForUpdatedBy = new HashSet<Designation>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<Employee> employeesForCreatedBy = new HashSet<Employee>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<Menu> menusForUpdatedBy = new HashSet<Menu>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<Role> rolesForUpdatedBy_1 = new HashSet<Role>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<SubMenu> subMenusForUpdatedBy = new HashSet<SubMenu>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<UserRole> userRolesForUpdatedBy = new HashSet<UserRole>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<Department> departmentsForUpdatedBy = new HashSet<Department>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<Department> departmentsForUpdatedBy_1 = new HashSet<Department>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<SubMenuDependency> subMenuDependenciesForUpdatedBy = new HashSet<SubMenuDependency>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<Role> rolesForCreatedBy = new HashSet<Role>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<SubMenu> subMenusForCreatedBy = new HashSet<SubMenu>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<Department> departmentsForCreatedBy = new HashSet<Department>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<Role> rolesForCreatedBy_1 = new HashSet<Role>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<SubMenu> subMenusForCreatedBy_1 = new HashSet<SubMenu>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<UserRole> userRolesForCreatedBy = new HashSet<UserRole>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<Designation> designationsForCreatedBy = new HashSet<Designation>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<Designation> designationsForUpdatedBy_1 = new HashSet<Designation>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<Menu> menusForUpdatedBy_1 = new HashSet<Menu>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<SubMenuDependency> subMenuDependenciesForCreatedBy = new HashSet<SubMenuDependency>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<Menu> menusForCreatedBy = new HashSet<Menu>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<Employee> employeesForUpdatedBy = new HashSet<Employee>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<SubMenuDependency> subMenuDependenciesForCreatedBy_1 = new HashSet<SubMenuDependency>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<Employee> employeesForUpdatedBy_1 = new HashSet<Employee>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<Department> departmentsForCreatedBy_1 = new HashSet<Department>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<Menu> menusForCreatedBy_1 = new HashSet<Menu>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<UserRole> userRolesForUpdatedBy_1 = new HashSet<UserRole>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<SubMenu> subMenusForUpdatedBy_1 = new HashSet<SubMenu>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<UserRole> userRolesForCreatedBy_1 = new HashSet<UserRole>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<Designation> designationsForCreatedBy_1 = new HashSet<Designation>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "createdBy")
	private Set<Employee> employeesForCreatedBy_1 = new HashSet<Employee>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "updatedBy")
	private Set<SubMenuDependency> subMenuDependenciesForUpdatedBy_1 = new HashSet<SubMenuDependency>(0);

	public Employee() {
	}

	public Employee(Designation designation, Employee createdBy, IndiaState indiaState, String firstName,
			String lastName, String displayName, String fullName, Gender gender, LocalDate dateOfBirth,
			String fatherName, String motherName, String mobile, String email, String address, int pincode,
			boolean enabled, LocalDateTime createdOn) {
		this.designation = designation;
		this.createdBy = createdBy;
		this.indiaState = indiaState;
		this.firstName = firstName;
		this.lastName = lastName;
		this.displayName = displayName;
		this.fullName = fullName;
		this.gender = gender;
		this.dateOfBirth = dateOfBirth;
		this.fatherName = fatherName;
		this.motherName = motherName;
		this.mobile = mobile;
		this.email = email;
		this.address = address;
		this.pincode = pincode;
		this.enabled = enabled;
		this.createdOn = createdOn;
	}

	public Employee(Designation designation, Employee createdBy, Employee updatedBy, IndiaState indiaState,
			String firstName, String middleName, String lastName, String nickName, String displayName, String fullName,
			Gender gender, String password, LocalDate dateOfBirth, String fatherName, String motherName, String phone,
			String mobile, String email, String address, int pincode, boolean enabled, String disabledReason,
			LocalDateTime createdOn, LocalDateTime updatedOn, Set<Role> rolesForUpdatedBy,
			Set<Designation> designationsForUpdatedBy, Set<Employee> employeesForCreatedBy, Set<Menu> menusForUpdatedBy,
			Set<Role> rolesForUpdatedBy_1, Set<SubMenu> subMenusForUpdatedBy, Set<UserRole> userRolesForUpdatedBy,
			Set<Department> departmentsForUpdatedBy, Set<Department> departmentsForUpdatedBy_1,
			Set<SubMenuDependency> subMenuDependenciesForUpdatedBy, Set<Role> rolesForCreatedBy,
			Set<SubMenu> subMenusForCreatedBy, Set<Department> departmentsForCreatedBy, Set<Role> rolesForCreatedBy_1,
			Set<SubMenu> subMenusForCreatedBy_1, Set<UserRole> userRolesForCreatedBy,
			Set<Designation> designationsForCreatedBy, Set<Designation> designationsForUpdatedBy_1,
			Set<Menu> menusForUpdatedBy_1, Set<SubMenuDependency> subMenuDependenciesForCreatedBy,
			Set<Menu> menusForCreatedBy, Set<Employee> employeesForUpdatedBy,
			Set<SubMenuDependency> subMenuDependenciesForCreatedBy_1, Set<Employee> employeesForUpdatedBy_1,
			Set<Department> departmentsForCreatedBy_1, Set<Menu> menusForCreatedBy_1,
			Set<UserRole> userRolesForUpdatedBy_1, Set<SubMenu> subMenusForUpdatedBy_1,
			Set<UserRole> userRolesForCreatedBy_1, Set<Designation> designationsForCreatedBy_1,
			Set<Employee> employeesForCreatedBy_1, Set<SubMenuDependency> subMenuDependenciesForUpdatedBy_1) {
		this.designation = designation;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.indiaState = indiaState;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.nickName = nickName;
		this.displayName = displayName;
		this.fullName = fullName;
		this.gender = gender;
		this.password = password;
		this.dateOfBirth = dateOfBirth;
		this.fatherName = fatherName;
		this.motherName = motherName;
		this.phone = phone;
		this.mobile = mobile;
		this.email = email;
		this.address = address;
		this.pincode = pincode;
		this.enabled = enabled;
		this.disabledReason = disabledReason;
		this.createdOn = createdOn;
		this.updatedOn = updatedOn;
		this.rolesForUpdatedBy = rolesForUpdatedBy;
		this.designationsForUpdatedBy = designationsForUpdatedBy;
		this.employeesForCreatedBy = employeesForCreatedBy;
		this.menusForUpdatedBy = menusForUpdatedBy;
		this.rolesForUpdatedBy_1 = rolesForUpdatedBy_1;
		this.subMenusForUpdatedBy = subMenusForUpdatedBy;
		this.userRolesForUpdatedBy = userRolesForUpdatedBy;
		this.departmentsForUpdatedBy = departmentsForUpdatedBy;
		this.departmentsForUpdatedBy_1 = departmentsForUpdatedBy_1;
		this.subMenuDependenciesForUpdatedBy = subMenuDependenciesForUpdatedBy;
		this.rolesForCreatedBy = rolesForCreatedBy;
		this.subMenusForCreatedBy = subMenusForCreatedBy;
		this.departmentsForCreatedBy = departmentsForCreatedBy;
		this.rolesForCreatedBy_1 = rolesForCreatedBy_1;
		this.subMenusForCreatedBy_1 = subMenusForCreatedBy_1;
		this.userRolesForCreatedBy = userRolesForCreatedBy;
		this.designationsForCreatedBy = designationsForCreatedBy;
		this.designationsForUpdatedBy_1 = designationsForUpdatedBy_1;
		this.menusForUpdatedBy_1 = menusForUpdatedBy_1;
		this.subMenuDependenciesForCreatedBy = subMenuDependenciesForCreatedBy;
		this.menusForCreatedBy = menusForCreatedBy;
		this.employeesForUpdatedBy = employeesForUpdatedBy;
		this.subMenuDependenciesForCreatedBy_1 = subMenuDependenciesForCreatedBy_1;
		this.employeesForUpdatedBy_1 = employeesForUpdatedBy_1;
		this.departmentsForCreatedBy_1 = departmentsForCreatedBy_1;
		this.menusForCreatedBy_1 = menusForCreatedBy_1;
		this.userRolesForUpdatedBy_1 = userRolesForUpdatedBy_1;
		this.subMenusForUpdatedBy_1 = subMenusForUpdatedBy_1;
		this.userRolesForCreatedBy_1 = userRolesForCreatedBy_1;
		this.designationsForCreatedBy_1 = designationsForCreatedBy_1;
		this.employeesForCreatedBy_1 = employeesForCreatedBy_1;
		this.subMenuDependenciesForUpdatedBy_1 = subMenuDependenciesForUpdatedBy_1;
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Designation getDesignation() {
		return this.designation;
	}

	public void setDesignation(Designation designation) {
		this.designation = designation;
	}

	public Employee getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Employee createdBy) {
		this.createdBy = createdBy;
	}

	public Employee getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Employee updatedBy) {
		this.updatedBy = updatedBy;
	}

	public IndiaState getIndiaState() {
		return this.indiaState;
	}

	public void setIndiaState(IndiaState indiaState) {
		this.indiaState = indiaState;
	}

	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getNickName() {
		return this.nickName;
	}

	public void setNickName(String nickName) {
		this.nickName = nickName;
	}

	public String getDisplayName() {
		return this.displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	public Gender getGender() {
		return this.gender;
	}

	public void setGender(Gender gender) {
		this.gender = gender;
	}

	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public LocalDate getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(LocalDate dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	public String getFatherName() {
		return this.fatherName;
	}

	public void setFatherName(String fatherName) {
		this.fatherName = fatherName;
	}

	public String getMotherName() {
		return this.motherName;
	}

	public void setMotherName(String motherName) {
		this.motherName = motherName;
	}

	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public int getPincode() {
		return this.pincode;
	}

	public void setPincode(int pincode) {
		this.pincode = pincode;
	}

	public boolean getEnabled() {
		return this.enabled;
	}

	public void setEnabled(boolean enabled) {
		this.enabled = enabled;
	}

	public String getDisabledReason() {
		return this.disabledReason;
	}

	public void setDisabledReason(String disabledReason) {
		this.disabledReason = disabledReason;
	}

	public LocalDateTime getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(LocalDateTime createdOn) {
		this.createdOn = createdOn;
	}

	public LocalDateTime getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(LocalDateTime updatedOn) {
		this.updatedOn = updatedOn;
	}

	public Set<Role> getRolesForUpdatedBy() {
		return this.rolesForUpdatedBy;
	}

	public void setRolesForUpdatedBy(Set<Role> rolesForUpdatedBy) {
		this.rolesForUpdatedBy = rolesForUpdatedBy;
	}

	public Set<Designation> getDesignationsForUpdatedBy() {
		return this.designationsForUpdatedBy;
	}

	public void setDesignationsForUpdatedBy(Set<Designation> designationsForUpdatedBy) {
		this.designationsForUpdatedBy = designationsForUpdatedBy;
	}

	public Set<Employee> getEmployeesForCreatedBy() {
		return this.employeesForCreatedBy;
	}

	public void setEmployeesForCreatedBy(Set<Employee> employeesForCreatedBy) {
		this.employeesForCreatedBy = employeesForCreatedBy;
	}

	public Set<Menu> getMenusForUpdatedBy() {
		return this.menusForUpdatedBy;
	}

	public void setMenusForUpdatedBy(Set<Menu> menusForUpdatedBy) {
		this.menusForUpdatedBy = menusForUpdatedBy;
	}

	public Set<Role> getRolesForUpdatedBy_1() {
		return this.rolesForUpdatedBy_1;
	}

	public void setRolesForUpdatedBy_1(Set<Role> rolesForUpdatedBy_1) {
		this.rolesForUpdatedBy_1 = rolesForUpdatedBy_1;
	}

	public Set<SubMenu> getSubMenusForUpdatedBy() {
		return this.subMenusForUpdatedBy;
	}

	public void setSubMenusForUpdatedBy(Set<SubMenu> subMenusForUpdatedBy) {
		this.subMenusForUpdatedBy = subMenusForUpdatedBy;
	}

	public Set<UserRole> getUserRolesForUpdatedBy() {
		return this.userRolesForUpdatedBy;
	}

	public void setUserRolesForUpdatedBy(Set<UserRole> userRolesForUpdatedBy) {
		this.userRolesForUpdatedBy = userRolesForUpdatedBy;
	}

	public Set<Department> getDepartmentsForUpdatedBy() {
		return this.departmentsForUpdatedBy;
	}

	public void setDepartmentsForUpdatedBy(Set<Department> departmentsForUpdatedBy) {
		this.departmentsForUpdatedBy = departmentsForUpdatedBy;
	}

	public Set<Department> getDepartmentsForUpdatedBy_1() {
		return this.departmentsForUpdatedBy_1;
	}

	public void setDepartmentsForUpdatedBy_1(Set<Department> departmentsForUpdatedBy_1) {
		this.departmentsForUpdatedBy_1 = departmentsForUpdatedBy_1;
	}

	public Set<SubMenuDependency> getSubMenuDependenciesForUpdatedBy() {
		return this.subMenuDependenciesForUpdatedBy;
	}

	public void setSubMenuDependenciesForUpdatedBy(Set<SubMenuDependency> subMenuDependenciesForUpdatedBy) {
		this.subMenuDependenciesForUpdatedBy = subMenuDependenciesForUpdatedBy;
	}

	public Set<Role> getRolesForCreatedBy() {
		return this.rolesForCreatedBy;
	}

	public void setRolesForCreatedBy(Set<Role> rolesForCreatedBy) {
		this.rolesForCreatedBy = rolesForCreatedBy;
	}

	public Set<SubMenu> getSubMenusForCreatedBy() {
		return this.subMenusForCreatedBy;
	}

	public void setSubMenusForCreatedBy(Set<SubMenu> subMenusForCreatedBy) {
		this.subMenusForCreatedBy = subMenusForCreatedBy;
	}

	public Set<Department> getDepartmentsForCreatedBy() {
		return this.departmentsForCreatedBy;
	}

	public void setDepartmentsForCreatedBy(Set<Department> departmentsForCreatedBy) {
		this.departmentsForCreatedBy = departmentsForCreatedBy;
	}

	public Set<Role> getRolesForCreatedBy_1() {
		return this.rolesForCreatedBy_1;
	}

	public void setRolesForCreatedBy_1(Set<Role> rolesForCreatedBy_1) {
		this.rolesForCreatedBy_1 = rolesForCreatedBy_1;
	}

	public Set<SubMenu> getSubMenusForCreatedBy_1() {
		return this.subMenusForCreatedBy_1;
	}

	public void setSubMenusForCreatedBy_1(Set<SubMenu> subMenusForCreatedBy_1) {
		this.subMenusForCreatedBy_1 = subMenusForCreatedBy_1;
	}

	public Set<UserRole> getUserRolesForCreatedBy() {
		return this.userRolesForCreatedBy;
	}

	public void setUserRolesForCreatedBy(Set<UserRole> userRolesForCreatedBy) {
		this.userRolesForCreatedBy = userRolesForCreatedBy;
	}

	public Set<Designation> getDesignationsForCreatedBy() {
		return this.designationsForCreatedBy;
	}

	public void setDesignationsForCreatedBy(Set<Designation> designationsForCreatedBy) {
		this.designationsForCreatedBy = designationsForCreatedBy;
	}

	public Set<Designation> getDesignationsForUpdatedBy_1() {
		return this.designationsForUpdatedBy_1;
	}

	public void setDesignationsForUpdatedBy_1(Set<Designation> designationsForUpdatedBy_1) {
		this.designationsForUpdatedBy_1 = designationsForUpdatedBy_1;
	}

	public Set<Menu> getMenusForUpdatedBy_1() {
		return this.menusForUpdatedBy_1;
	}

	public void setMenusForUpdatedBy_1(Set<Menu> menusForUpdatedBy_1) {
		this.menusForUpdatedBy_1 = menusForUpdatedBy_1;
	}

	public Set<SubMenuDependency> getSubMenuDependenciesForCreatedBy() {
		return this.subMenuDependenciesForCreatedBy;
	}

	public void setSubMenuDependenciesForCreatedBy(Set<SubMenuDependency> subMenuDependenciesForCreatedBy) {
		this.subMenuDependenciesForCreatedBy = subMenuDependenciesForCreatedBy;
	}

	public Set<Menu> getMenusForCreatedBy() {
		return this.menusForCreatedBy;
	}

	public void setMenusForCreatedBy(Set<Menu> menusForCreatedBy) {
		this.menusForCreatedBy = menusForCreatedBy;
	}

	public Set<Employee> getEmployeesForUpdatedBy() {
		return this.employeesForUpdatedBy;
	}

	public void setEmployeesForUpdatedBy(Set<Employee> employeesForUpdatedBy) {
		this.employeesForUpdatedBy = employeesForUpdatedBy;
	}

	public Set<SubMenuDependency> getSubMenuDependenciesForCreatedBy_1() {
		return this.subMenuDependenciesForCreatedBy_1;
	}

	public void setSubMenuDependenciesForCreatedBy_1(Set<SubMenuDependency> subMenuDependenciesForCreatedBy_1) {
		this.subMenuDependenciesForCreatedBy_1 = subMenuDependenciesForCreatedBy_1;
	}

	public Set<Employee> getEmployeesForUpdatedBy_1() {
		return this.employeesForUpdatedBy_1;
	}

	public void setEmployeesForUpdatedBy_1(Set<Employee> employeesForUpdatedBy_1) {
		this.employeesForUpdatedBy_1 = employeesForUpdatedBy_1;
	}

	public Set<Department> getDepartmentsForCreatedBy_1() {
		return this.departmentsForCreatedBy_1;
	}

	public void setDepartmentsForCreatedBy_1(Set<Department> departmentsForCreatedBy_1) {
		this.departmentsForCreatedBy_1 = departmentsForCreatedBy_1;
	}

	public Set<Menu> getMenusForCreatedBy_1() {
		return this.menusForCreatedBy_1;
	}

	public void setMenusForCreatedBy_1(Set<Menu> menusForCreatedBy_1) {
		this.menusForCreatedBy_1 = menusForCreatedBy_1;
	}

	public Set<UserRole> getUserRolesForUpdatedBy_1() {
		return this.userRolesForUpdatedBy_1;
	}

	public void setUserRolesForUpdatedBy_1(Set<UserRole> userRolesForUpdatedBy_1) {
		this.userRolesForUpdatedBy_1 = userRolesForUpdatedBy_1;
	}

	public Set<SubMenu> getSubMenusForUpdatedBy_1() {
		return this.subMenusForUpdatedBy_1;
	}

	public void setSubMenusForUpdatedBy_1(Set<SubMenu> subMenusForUpdatedBy_1) {
		this.subMenusForUpdatedBy_1 = subMenusForUpdatedBy_1;
	}

	public Set<UserRole> getUserRolesForCreatedBy_1() {
		return this.userRolesForCreatedBy_1;
	}

	public void setUserRolesForCreatedBy_1(Set<UserRole> userRolesForCreatedBy_1) {
		this.userRolesForCreatedBy_1 = userRolesForCreatedBy_1;
	}

	public Set<Designation> getDesignationsForCreatedBy_1() {
		return this.designationsForCreatedBy_1;
	}

	public void setDesignationsForCreatedBy_1(Set<Designation> designationsForCreatedBy_1) {
		this.designationsForCreatedBy_1 = designationsForCreatedBy_1;
	}

	public Set<Employee> getEmployeesForCreatedBy_1() {
		return this.employeesForCreatedBy_1;
	}

	public void setEmployeesForCreatedBy_1(Set<Employee> employeesForCreatedBy_1) {
		this.employeesForCreatedBy_1 = employeesForCreatedBy_1;
	}

	public Set<SubMenuDependency> getSubMenuDependenciesForUpdatedBy_1() {
		return this.subMenuDependenciesForUpdatedBy_1;
	}

	public void setSubMenuDependenciesForUpdatedBy_1(Set<SubMenuDependency> subMenuDependenciesForUpdatedBy_1) {
		this.subMenuDependenciesForUpdatedBy_1 = subMenuDependenciesForUpdatedBy_1;
	}

}
