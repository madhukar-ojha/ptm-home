package ptm.home.entity;
// Generated Jun 7, 2020 7:43:22 AM by Hibernate Tools 5.2.12.Final

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import javax.persistence.*;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * SubMenu generated by hbm2java
 */
@Entity
@Table(name = "sub_menu", catalog = "ptm_dev", uniqueConstraints = { @UniqueConstraint(columnNames = "actionKey"),
		@UniqueConstraint(columnNames = "subMenuUrl") })
public class SubMenu implements java.io.Serializable {

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	private int id;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedBy")
	private Employee updatedBy;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdBy", nullable = false)
	private Employee createdBy;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "menu_id", nullable = false)
	private Menu menu;

	@Column(name = "actionKey", unique = true, nullable = false, length = 50)
	private String actionKey;

	@Column(name = "actionType", nullable = false, length = 13)
	private String actionType;

	@Column(name = "subMenuUrl", unique = true, nullable = false, length = 50)
	private String subMenuUrl;

	@Column(name = "subMenuName", nullable = false, length = 50)
	private String subMenuName;

	@Column(name = "commandName", nullable = false, length = 50)
	private String commandName;

	@Column(name = "enabled", nullable = false, length = 5)
	private String enabled;

	@Column(name = "deleted", nullable = false, length = 5)
	private String deleted;

	@Column(name = "createdOn", nullable = false, length = 26)
	@CreationTimestamp
	private LocalDateTime createdOn;

	@Column(name = "updatedOn", length = 26)
	@UpdateTimestamp
	private LocalDateTime updatedOn;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subMenuBySubMenuId")
	private Set<SubMenuDependency> subMenuDependenciesForSubMenuId = new HashSet<SubMenuDependency>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subMenu")
	private Set<UserRole> userRoles = new HashSet<UserRole>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subMenuBySubMenuId")
	private Set<SubMenuDependency> subMenuDependenciesForSubMenuId_1 = new HashSet<SubMenuDependency>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subMenuBySubMenuDependencyId")
	private Set<SubMenuDependency> subMenuDependenciesForSubMenuDependencyId = new HashSet<SubMenuDependency>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subMenu")
	private Set<UserRole> userRoles_1 = new HashSet<UserRole>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subMenuBySubMenuDependencyId")
	private Set<SubMenuDependency> subMenuDependenciesForSubMenuDependencyId_1 = new HashSet<SubMenuDependency>(0);

	public SubMenu() {
	}

	public SubMenu(Employee createdBy, Menu menu, String actionKey, String actionType, String subMenuUrl,
			String subMenuName, String commandName, String enabled, String deleted, LocalDateTime createdOn) {
		this.createdBy = createdBy;
		this.menu = menu;
		this.actionKey = actionKey;
		this.actionType = actionType;
		this.subMenuUrl = subMenuUrl;
		this.subMenuName = subMenuName;
		this.commandName = commandName;
		this.enabled = enabled;
		this.deleted = deleted;
		this.createdOn = createdOn;
	}

	public SubMenu(Employee updatedBy, Employee createdBy, Menu menu, String actionKey, String actionType,
			String subMenuUrl, String subMenuName, String commandName, String enabled, String deleted,
			LocalDateTime createdOn, LocalDateTime updatedOn, Set<SubMenuDependency> subMenuDependenciesForSubMenuId,
			Set<UserRole> userRoles, Set<SubMenuDependency> subMenuDependenciesForSubMenuId_1,
			Set<SubMenuDependency> subMenuDependenciesForSubMenuDependencyId, Set<UserRole> userRoles_1,
			Set<SubMenuDependency> subMenuDependenciesForSubMenuDependencyId_1) {
		this.updatedBy = updatedBy;
		this.createdBy = createdBy;
		this.menu = menu;
		this.actionKey = actionKey;
		this.actionType = actionType;
		this.subMenuUrl = subMenuUrl;
		this.subMenuName = subMenuName;
		this.commandName = commandName;
		this.enabled = enabled;
		this.deleted = deleted;
		this.createdOn = createdOn;
		this.updatedOn = updatedOn;
		this.subMenuDependenciesForSubMenuId = subMenuDependenciesForSubMenuId;
		this.userRoles = userRoles;
		this.subMenuDependenciesForSubMenuId_1 = subMenuDependenciesForSubMenuId_1;
		this.subMenuDependenciesForSubMenuDependencyId = subMenuDependenciesForSubMenuDependencyId;
		this.userRoles_1 = userRoles_1;
		this.subMenuDependenciesForSubMenuDependencyId_1 = subMenuDependenciesForSubMenuDependencyId_1;
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Employee getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Employee updatedBy) {
		this.updatedBy = updatedBy;
	}

	public Employee getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Employee createdBy) {
		this.createdBy = createdBy;
	}

	public Menu getMenu() {
		return this.menu;
	}

	public void setMenu(Menu menu) {
		this.menu = menu;
	}

	public String getActionKey() {
		return this.actionKey;
	}

	public void setActionKey(String actionKey) {
		this.actionKey = actionKey;
	}

	public String getActionType() {
		return this.actionType;
	}

	public void setActionType(String actionType) {
		this.actionType = actionType;
	}

	public String getSubMenuUrl() {
		return this.subMenuUrl;
	}

	public void setSubMenuUrl(String subMenuUrl) {
		this.subMenuUrl = subMenuUrl;
	}

	public String getSubMenuName() {
		return this.subMenuName;
	}

	public void setSubMenuName(String subMenuName) {
		this.subMenuName = subMenuName;
	}

	public String getCommandName() {
		return this.commandName;
	}

	public void setCommandName(String commandName) {
		this.commandName = commandName;
	}

	public String getEnabled() {
		return this.enabled;
	}

	public void setEnabled(String enabled) {
		this.enabled = enabled;
	}

	public String getDeleted() {
		return this.deleted;
	}

	public void setDeleted(String deleted) {
		this.deleted = deleted;
	}

	public LocalDateTime getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(LocalDateTime createdOn) {
		this.createdOn = createdOn;
	}

	public LocalDateTime getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(LocalDateTime updatedOn) {
		this.updatedOn = updatedOn;
	}

	public Set<SubMenuDependency> getSubMenuDependenciesForSubMenuId() {
		return this.subMenuDependenciesForSubMenuId;
	}

	public void setSubMenuDependenciesForSubMenuId(Set<SubMenuDependency> subMenuDependenciesForSubMenuId) {
		this.subMenuDependenciesForSubMenuId = subMenuDependenciesForSubMenuId;
	}

	public Set<UserRole> getUserRoles() {
		return this.userRoles;
	}

	public void setUserRoles(Set<UserRole> userRoles) {
		this.userRoles = userRoles;
	}

	public Set<SubMenuDependency> getSubMenuDependenciesForSubMenuId_1() {
		return this.subMenuDependenciesForSubMenuId_1;
	}

	public void setSubMenuDependenciesForSubMenuId_1(Set<SubMenuDependency> subMenuDependenciesForSubMenuId_1) {
		this.subMenuDependenciesForSubMenuId_1 = subMenuDependenciesForSubMenuId_1;
	}

	public Set<SubMenuDependency> getSubMenuDependenciesForSubMenuDependencyId() {
		return this.subMenuDependenciesForSubMenuDependencyId;
	}

	public void setSubMenuDependenciesForSubMenuDependencyId(
			Set<SubMenuDependency> subMenuDependenciesForSubMenuDependencyId) {
		this.subMenuDependenciesForSubMenuDependencyId = subMenuDependenciesForSubMenuDependencyId;
	}

	public Set<UserRole> getUserRoles_1() {
		return this.userRoles_1;
	}

	public void setUserRoles_1(Set<UserRole> userRoles_1) {
		this.userRoles_1 = userRoles_1;
	}

	public Set<SubMenuDependency> getSubMenuDependenciesForSubMenuDependencyId_1() {
		return this.subMenuDependenciesForSubMenuDependencyId_1;
	}

	public void setSubMenuDependenciesForSubMenuDependencyId_1(
			Set<SubMenuDependency> subMenuDependenciesForSubMenuDependencyId_1) {
		this.subMenuDependenciesForSubMenuDependencyId_1 = subMenuDependenciesForSubMenuDependencyId_1;
	}

}
